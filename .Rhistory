for(i in 1:N){
p[i]~inv_logit(rate[x[i]]-rate[y[i]]);
1~berounulli(p[n]);
}
}
/*
generated quantities{
real ssum;
for(t in (N+1):T_pred_max){
ssum<-0;
c_ar[t]=2*c_ar[t-1]-c_ar[t-2];
for(i in 1:(arn)){
ssum<-ssum+c_ar[t-i]*ar[t-i];
}
ar[t]<-ssum;
}
for(t in (arn+1):N){
ssum<-0;
for(i in 1:(arn)){
ssum<-ssum+c_ar[t-i]*ar[t-i];
}
ar[t]~normal(ssum,s_ar);
}
}
*/
"
x=c(1,3,4,1,4)
y=c(2,2,3,3,2)
lst=list(N=length(x),x=x,y=y,M=max(x))
fit=stan(model_code = scode,data=lst,
#init = function(){},
chain=1,iter=500,warmup = 80)
source('~/R/rating_stan.R')
rep(1,10)
source('~/R/rating_stan.R')
source('~/R/rating_stan.R')
source('~/R/rating_stan.R')
source('~/R/rating_stan.R')
lst
source('~/R/rating_stan.R')
source('~/R/rating_stan.R')
source('~/R/rating_stan.R')
la=extract(fit)
rate=stan.get_parameter(fit,"rate")
la$rate
dim(la$rate)
apply(la$rate,1,mean)
dim(apply(la$rate,1,mean))
apply(la$rate,2,mean)
rate=apply(la$rate,2,mean)
source('~/R/rating_stan.R')
la=extract(fit)
rate=apply(la$rate,2,mean)
print(rate)
source('~/R/rating_stan.R')
la=extract(fit)
rate=apply(la$rate,2,mean)
print(rate)
#rate=stan.ge
order(rate)
source('~/R/rating_stan.R')
la=extract(fit)
rate=apply(la$rate,2,mean)
print(rate)
#rate=stan.get_parameter(fit,"rate")
rate
log(0.64)/100
source('~/R/rating_stan.R')
source('~/R/rating_stan.R')
la=extract(fit)
rate=apply(la$rate,2,mean)
print(rate)
b
sigmoid(1)
sigmoid(100*0.00575364)
mean(rate)
mrate=rate-mean(rate)
mrate
rate
inv.logit
source('~/R/rating_stan.R')
la=extract(fit)
rate=apply(la$rate,2,mean)
print(rate)
mrate=rate-mean(rate)
rate
mrate
rate[1]-rate[2]
b*(rate[1]-rate[2])
b=0.005753
b*(rate[1]-rate[2])
sigmoid(b*(rate[1]-rate[2]))
sigmoid(b*10000)
sigmoid(b*1000)
sigmoid(b*100)
source('~/R/rating_stan.R')
la=extract(fit)
rate=apply(la$rate,2,mean)
print(rate)
mrate=rate-mean(rate)
source('~/R/rating_stan.R')
la=extract(fit)
rate=apply(la$rate,2,mean)
print(rate)
mrate=rate-mean(rate)
rate
c(c(1,2),c(1,2))
matrix(c(1,2,3,4),ncol=4)
matrix(c(1,2,3,4,1,4,2,3),ncol=4)
matrix(c(1,2,3,4,1,4,2,3),ncol=4,byrow = T)
d=data.frame()
View(d)
View(d)
d=c(1,2,3,4,
1,4,2,3,
2,3,4,5,
2,3,1,5,
1,3,2,5)
df=matrix(d,ncol=4,byrow = T)
matrix(c(1,2,3,4,1,4,2,3),ncol=4,byrow = T)df
df
df[,:2]
df[,1:2]
x=df[,1:2]
#b=Solve[1/(1 + Exp[-x*100]) == 0.64, x]
d=c(1,2,3,4,
1,4,2,3,
2,3,4,5,
2,3,1,5,
1,3,2,5)
df=matrix(d,ncol=4,byrow = T)
x=df[,1:2]
y=df[,3:4]
lst=list(N=nrow(x),x=x,y=y,M=max(df),one=rep(1,length(x)))
fit=stan(model_code = scode,data=lst,
#init = function(){},
chain=1,iter=500,warmup = 80)
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
lst
length(x)
source('~/R/rating/rating_double.R')
la$rate_two
dim(la$rate_two)
rate_two
rate=apply(la$rate,2,mean)
M=max(df)
rate_two=matrix(0,M,M)
for(i in 1:M){
for(j in 1:M){
rate_tow[i,j]=mean(la$rate_two[,i,j])
}
}
rate=apply(la$rate,2,mean)
M=max(df)
rate_two=matrix(0,M,M)
for(i in 1:M){
for(j in 1:M){
rate_two[i,j]=mean(la$rate_two[,i,j])
}
}
#rate_two=apply(la$rate_two,2,mean)
rate_tow
rate_two
rate
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
df
lst
la=extract(fit)
rate=apply(la$rate,2,mean)
M=max(df)
rate_two=matrix(0,M,M)
for(i in 1:M){
for(j in 1:M){
rate_two[i,j]=mean(la$rate_two[,i,j])
}
}
#rate_two=apply(la$rate_two,2,mean)
print(rate)
#[1] 2463.690  403.316 1254.647 1795.259
mrate=rate-mean(rate)
rate_tow
rate_two
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
la=extract(fit)
rate=apply(la$rate,2,mean)
M=max(df)
rate_two=matrix(0,M,M)
for(i in 1:M){
for(j in 1:M){
rate_two[i,j]=mean(la$rate_two[,i,j])
}
}
#rate_two=apply(la$rate_two,2,mean)
print(rate)
#[1] 2463.690  403.316 1254.647 1795.259
mrate=rate-mean(rate)
rate
print(rate_two)
#rate_two=apply(la$rate
df
x
y
rate
rate_two
x
x[1,2]
x[2,2]
source('~/R/rating/rating_double.R')
la=extract(fit)
rate=apply(la$rate,2,mean)
M=max(df)
rate_two=matrix(0,M,M)
for(i in 1:M){
for(j in 1:M){
rate_two[i,j]=mean(la$rate_two[,i,j])
}
}
print(rate_two)
#rate_two=apply(la$rate_two,2,mean)
print(rate)
#[1] 2463.690  403.316 1254.647 1795.259
df
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
sigmoid(0)
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
lst
source('~/R/rating/rating_double.R')
df
rate
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
rate
rate_two
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
rate
source('~/R/rating/rating_double.R')
lst
df
source('~/R/rating/rating_double.R')
lst
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
scode="
data{
int N;
int M;
int x[N,2];
int y[N,2];
int one[N];
}
parameters {
real rate[M];
real rate_two[M,M];
}
transformed parameters {
real p[N];
real tmp1;
real tmp2;
real b=0.00575364;
for(i in 1:N){
//tmp1=rate[x[i,1]]+rate[x[i,2]]+rate_two[x[i,1],x[i,2]];
//tmp2=rate[y[i,1]]+rate[y[i,2]]+rate_two[y[i,1],y[i,2]];
tmp1=rate_two[x[i,1],x[i,2]];
tmp2=rate_two[y[i,1],y[i,2]];
p[i]=inv_logit(b*(tmp1-tmp2));
print(rate_two[1,1])
print(p[i])
}
}
model{
//rate~normal(1500,500);
rate~normal(0,0.0001);
//b=0.00575364;
for(i in 1:M){
for(j in 1:M)
{
if(i==j){
rate_two[i,j]~normal(1500,500);
}else{
//rate_two[i,j]~normal(1500,500);
//rate_two[i,j]~normal(0,0.00001);
}
}
}
//rate_two~normal(0,100);
//one~berounulli(p);
for(i in 1:N){
//tmp1=rate[x[i,1]]+rate[x[i,2]]+rate_two[x[i,1],x[i,2]];
//tmp2=rate[y[i,1]]+rate[y[i,2]]+rate_two[y[i,1],y[i,2]];
//print(tmp1);
//print(tmp2);
//print(tmp1-tmp2);
//  print(b*(tmp1-tmp2))
//print(inv_logit(b*(tmp1-tmp2)))
//target += bernoulli_lpmf( one[i] | inv_logit(b*(tmp1-tmp2)));
one[i]~bernoulli(inv_logit(p[i]));
}
}
"
scode="
data{
int N;
int M;
int x[N,2];
int y[N,2];
int one[N];
}
parameters {
real rate[M];
real rate_two[M,M];
}
transformed parameters {
real p[N];
real tmp1;
real tmp2;
real b=0.00575364;
for(i in 1:N){
//tmp1=rate[x[i,1]]+rate[x[i,2]]+rate_two[x[i,1],x[i,2]];
//tmp2=rate[y[i,1]]+rate[y[i,2]]+rate_two[y[i,1],y[i,2]];
tmp1=rate_two[x[i,1],x[i,2]];
tmp2=rate_two[y[i,1],y[i,2]];
p[i]=inv_logit(b*(tmp1-tmp2));
print(rate_two[1,1])
print(p[i])
}
}
model{
//rate~normal(1500,500);
rate~normal(0,0.0001);
//b=0.00575364;
for(i in 1:M){
for(j in 1:M)
{
if(i==j){
rate_two[i,j]~normal(1500,500);
}else{
//rate_two[i,j]~normal(1500,500);
//rate_two[i,j]~normal(0,0.00001);
}
}
}
//rate_two~normal(0,100);
//one~berounulli(p);
for(i in 1:N){
//tmp1=rate[x[i,1]]+rate[x[i,2]]+rate_two[x[i,1],x[i,2]];
//tmp2=rate[y[i,1]]+rate[y[i,2]]+rate_two[y[i,1],y[i,2]];
//print(tmp1);
//print(tmp2);
//print(tmp1-tmp2);
//  print(b*(tmp1-tmp2))
//print(inv_logit(b*(tmp1-tmp2)))
//target += bernoulli_lpmf( one[i] | inv_logit(b*(tmp1-tmp2)));
one[i]~bernoulli(inv_logit(p[i]));
}
}
"
scode="
data{
int N;
int M;
int x[N,2];
int y[N,2];
int one[N];
}
parameters {
real rate[M];
real rate_two[M,M];
}
transformed parameters {
real p[N];
real tmp1;
real tmp2;
real b=0.00575364;
for(i in 1:N){
//tmp1=rate[x[i,1]]+rate[x[i,2]]+rate_two[x[i,1],x[i,2]];
//tmp2=rate[y[i,1]]+rate[y[i,2]]+rate_two[y[i,1],y[i,2]];
tmp1=rate_two[x[i,1],x[i,2]];
tmp2=rate_two[y[i,1],y[i,2]];
p[i]=inv_logit(b*(tmp1-tmp2));
print(rate_two[1,1])
print(p[i])
}
}
model{
//rate~normal(1500,500);
rate~normal(0,0.0001);
//b=0.00575364;
for(i in 1:M){
for(j in 1:M)
{
if(i==j){
rate_two[i,j]~normal(1500,500);
}else{
//rate_two[i,j]~normal(1500,500);
//rate_two[i,j]~normal(0,0.00001);
}
}
}
//rate_two~normal(0,100);
//one~berounulli(p);
for(i in 1:N){
//tmp1=rate[x[i,1]]+rate[x[i,2]]+rate_two[x[i,1],x[i,2]];
//tmp2=rate[y[i,1]]+rate[y[i,2]]+rate_two[y[i,1],y[i,2]];
//print(tmp1);
//print(tmp2);
//print(tmp1-tmp2);
//  print(b*(tmp1-tmp2))
//print(inv_logit(b*(tmp1-tmp2)))
//target += bernoulli_lpmf( one[i] | inv_logit(b*(tmp1-tmp2)));
one[i]~bernoulli(inv_logit(p[i]));
}
}
"
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
rtinit=matrix(9,M,M)
rtinit
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
df=matrix(dsingle,ncol=4,byrow = T)
x=df[,1:2]
y=df[,3:4]
M=max(df)
rtinit=matrix(1500,M,M)
rtinit
lst=list(N=nrow(x),x=x,y=y,M=max(df),one=rep(1,nrow(x)))
fit=stan(model_code = scode,data=lst,
init = function(){rate_two=rtinit},
chain=1,iter=500,warmup = 80)
la=extract(fit)
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
la$rate_two
la$rate_two[,1,1]
hist(la$rate_two[,1,1])
qplot(la$rate_two[,1,1])
qplot(la$rate_two[,2,2])
lst
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
list(rate_two=rtinit,rate=rep(1500,M))
source('~/R/rating/rating_double.R')
lst
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
lst
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
lst
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
source('~/R/rating/rating_double.R')
lst
rate
rate_two
source('~/R/rating/rating_double.R')
